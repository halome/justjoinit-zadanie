name: Bump DEV patch version after merging to UAT

on:
  push:
    branches:
      - uat

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        if: env.IS_DEV == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get last commit message
        id: get-last-commit-message
        run: |
          last_commit_message=$(git log -1 --pretty=format:%s)

          echo "last_commit_message=${last_commit_message}" >> $GITHUB_OUTPUT
          echo "dev_branch_name=${{ github.repository_owner }}/dev" >> $GITHUB_OUTPUT

      - name: Check if changes come from dev branch
        if: contains(steps.get-last-commit-message.outputs.last_commit_message, steps.get-last-commit-message.outputs.dev_branch_name)
        run: echo "IS_DEV=true" >> $GITHUB_ENV

      - name: Checkout dev branch
        if: env.IS_DEV == 'true'
        uses: actions/checkout@v3
        with:
          ref: dev

      - name: Set git user identity
        if: env.IS_DEV == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Bump version and push changes to dev branch
        if: env.IS_DEV == 'true'
        run: |
          git checkout -b dev-bump-version-patch
          npm version patch --force
          git push origin dev-bump-version-patch --force --no-verify

  create_pull_request:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs:
      - bump-version
    permissions:
      pull-requests: write
    steps:
      - name: 'Grab package.json version'
        id: 'grab-package-json-version'
        run: |
          new_dev_version=$(git log -1 --pretty=%B)
          echo "new_dev_version=${new_dev_version}" >> $GITHUB_OUTPUT

      - name: 'Create PR'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const new_dev_version=${{ steps.grab-package-json-version.outputs.new_dev_version }}

            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: 'dev-bump-version-patch',
              base: 'dev',
              state: 'open',
            });

            if (pulls.data.length < 1) {
              await github.rest.pulls.create({
                title: 'DEV ${env.PACKAGE_VERSION}',
                owner: owner,
                repo: repo,
                head: 'dev-bump-version-patch',
                base: 'dev',
                body: [
                  'This PR is auto-generated to bump dev patch version after uat release',
                  '[actions/github-script](https://github.com/actions/github-script)',
                ].join('\n'),
              });
            } else {
              const existingPR = pulls.data[0];
              await github.rest.pulls.update({
                owner: owner,
                repo: repo,
                pull_number: existingPR.number,
                body: [
                  existingPR.body,
                  `Updated by Job ${context.job}`,
                ].join('\n'),
              });
            }
